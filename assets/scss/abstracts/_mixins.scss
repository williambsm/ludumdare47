@mixin clearfix { 
	&::after { 
		content: '';
		display: table;
		clear: both;
	}
}

@mixin absCenter { 
	transform: translate(-50%, -50%);
	top: 50%;
	left: 50%;
}

@mixin vertCenter { 
	top: 50%;
	transform: translateX(-50%);
}

@mixin horCenter { 
	left: 50%;
	transform: translateY(-50%);
}

@mixin horList { 
	padding: 0;
	margin: 0;
	li {
		vertical-align: middle;
		display: inline-block;
		list-style-type: none;
		padding: 0;
		margin: 0;
	}
}

@mixin vertList { 
	padding: 0;
	margin: 0;
	li { 
		list-style-type: none;
		display: block;
		padding: 0;
		margin: 0;
	}
}


/* Color Classes */

@mixin color-classes() {
  	@each $name, $color in $base-colors {
	    .gradient-#{$name} {
	    	background: linear-gradient(to right, $color 0%, lighten($color, 8%) 100%);
	    }
	    .bg-#{$name} {
	    	background-color: $color;
	    	color: white;
	    }
	    .border-#{$name} { 
			border: 1px solid $color;
			color: $color;
	    }
	    .text-#{$name} {
	    	color: $color;
	    }
	    .link-#{$name}-black { 
			color: $color;
			&:hover { 
				color: black;
			}
	    }
	    .link-#{$name}-white { 
			color: $color;
			&:hover { 
				color: white;
			}
	    }
  	}
}

@mixin button-color-classes() {
  	@each $name, $color in $base-colors {
		&.-bg-#{$name} { 
			background-color: $color;
			color: white;
			border: 1px solid $color;
			&.-with-shadow { 
				box-shadow: 0 0 10px 0 rgba($color, 30%);
			}
			&:hover { 
				background-color: darken($color, 10%);
			}
	    }
	    &.-border-#{$name} { 
			color: $color;
			border: 1px solid $color;
			background-color: white;
			&:hover { 
				background-color: $color;
				color: white;
			}
	    }
	    &.-faded-hover-#{$name} { 
	    	border: 1px solid $grey-mid-light;
	    	background-color: white;
	    	color: black;
	    	&:hover {
	    		@if (($name == "blue") or ($name == "red")) {
					background-color: lighten($color, 30%);
	    		} @else if (($name == "purple") or ($name == "yellow")) { 
					background-color: lighten($color, 40%);
	    		} @else {
					background-color: lighten($color, 50%);
				}
				color: $color;
				border-color: $color;
			}
	    }
  	}
}

/* Breakpoints */

@mixin respond($breakpoint) { 
	// 414px
	@if $breakpoint == mobile { 
		@media (max-width: $mobile) { @content }
	}
	// 767px
	@if $breakpoint == tab-port { 
		@media (max-width: $tablet-port) { @content }
	}
	// 991px
	@if $breakpoint == tab-land { 
		@media (max-width: $tablet-land) { @content }
	}
	// 1200px
	@if $breakpoint == desktop { 
		@media (max-width: $desktop) { @content }
	}
	// 1800px
	@if $breakpoint == big-desktop { 
		@media (min-width: $big-desktop) { @content }
	}
}